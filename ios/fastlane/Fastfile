# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

require 'fastlane/plugin/versioning'

platform :ios do
  #——————————————————————————————————————————————————————————————————————————
  # 1. 빌드 번호만 증가시키는 lane
  #    - 현재 build number 읽음
  #    - +1 한 다음 Git 태그( vX.Y.Z-bN ) 생성
  #——————————————————————————————————————————————————————————————————————————
  lane :bump_build do
    # 1-1. 버전 및 빌드 번호 가져오기
    current_version = get_version_number_from_xcodeproj(
      xcodeproj: "nailian.xcodeproj",
      scheme: "nailian",
      build_configuration_name: "Release"
    )
    current_build_number = get_build_number_from_xcodeproj(
      xcodeproj: "nailian.xcodeproj",
      scheme: "nailian",
      build_configuration_name: "Release"
    )
    new_build_number = current_build_number.to_i + 1

    # 1-2. 태그 이름 생성 및 중복 확인
    build_tag_name = "v#{current_version}-b#{new_build_number}"

    existing_tags = sh("git tag").split("\n")
    if existing_tags.include?(build_tag_name)
      UI.user_error!("이미 존재하는 태그입니다: #{build_tag_name}")
    end

    # 1-3. Xcode 프로젝트 빌드 번호 업데이트
    increment_build_number_in_xcodeproj(
      build_number: new_build_number.to_s,
      xcodeproj: "nailian.xcodeproj",
      scheme: "nailian",
      build_configuration_name: "Release"
    )
    UI.message("CURRENT_PROJECT_VERSION → #{new_build_number}")

    # 1-4. Git 커밋 및 태그 생성, 푸시
    sh("git add ../nailian.xcodeproj")
    sh("git commit --no-verify -m 'release v#{current_version} (#{new_build_number})' || echo 'no changes to commit'")
    sh("git tag #{build_tag_name}")
    sh("git push origin HEAD --tags")

    UI.success("빌드 번호 #{new_build_number}로 업데이트 및 태그 #{build_tag_name} 생성 완료")
  end
end
